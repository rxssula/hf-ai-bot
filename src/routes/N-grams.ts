import express from 'express';
import Classifier from 'ml-classify-text';

const router = express.Router();
const classifier = new Classifier({
    nGramMin: 2,
    nGramMax: 2,  // Используем биграммы
});

// Обучение модели на примере "хорошего кандидата"
const positiveData = [
    "React","TypeScript","Работал","хочу помогать Казахстану","имеется мотивация","не знаю чем занятса"
];

const negativeData = [
    'Такой кандидат с плохой мотивацией, коротко пишет, нет ссылки на GitHub и т.д.',
    'Не имеет опыта работы с современными технологиями',
    'Имеет плохую репутацию в профессиональном сообществе',
    'Не прошел стажировку в крупной IT-компании',
    // Дополнительные отрицательные примеры
    'Игнорирует использование систем контроля версий (Git)',
    'Не обновляет навыки и знания в области машинного обучения',
    'Не участвует в международных конференциях и хакатонах',
];

// Положительные и отрицательные данные для обучения модели могут быть использованы для классификации кандидатов на основе их профиля и характеристик.


classifier.train(positiveData, 'хороший кандидат');
classifier.train(negativeData, 'плохой кандидат');

// Роут для предсказания
router.post('/predict', (req, res) => {
    // const { text } = req.body;
        const prompt = "Меня зовут Мирас, живу в городе Алматы, хочу к вам поступит ведь я хочу помогать Казахстану,просто не знаю чем занятся, работал с React, TypeScript, есть мотивация двигаться вперед!)"
    // Выводим текст кандидата в консоль сервера для демонстрации
    console.log('Текст кандидата:', prompt);

    // Предсказываем категорию на основе текста
    const predictions = classifier.predict(prompt);

    if (predictions.length) {
        res.json(predictions);
    } else {
        res.json({ message: 'Нет предсказаний' });
    }
});

export default router;
